doctype html
html(lang="en")
  head
    title AJAX App
    link(rel='stylesheet', href='../styles/main.css')
    link(rel='icon', href='../img/favicon.png', sizes='16x16 32x32', type='image/png')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js')

  body
    div(class='main-body')
      h5 Testing making a request:
      button(type='button') Make a request
      h5 Testing making request with respons from the server:
      label(for='ajaxTextBox') Your name:#[br]
        input(type='text', id='ajaxTextBox')
      button(type='button', id='ajaxButton') Get a response
      h5 Testing monitoring progress:
      button(type='button', id='monitorBtn') Monitor progress
      div(class='monitor-output')
      h5 Change content with AJAX request:
      div(class='block-request', id='block-request')
        h2 Lex AJAX change this text
        p An informational response indicates that the request was received and understood. It is issued on a provisional basis while request processing continues. It alerts the client to wait for a final response. The message consists only of the status line and optional header fields, and is terminated by an empty line. As the HTTP/1.0 standard did not define any 1xx status codes, servers must not[note 1] send a 1xx response to an HTTP/1.0 compliant client except under experimental conditions
        ol
          li #[b 100 Continue] The server has received the request headers and the client should proceed to send the request body (in the case of a request for which a body needs to be sent; for example, a POST request). Sending a large request body to a server after a request has been rejected for inappropriate headers would be inefficient. To have a server check the request's headers, a client must send Expect: 100-continue as a header in its initial request and receive a 100 Continue status code in response before sending the body. If the client receives an error code such as 403 (Forbidden) or 405 (Method Not Allowed) then it shouldn't send the request's body. The response 417 Expectation Failed indicates that the request should be repeated without the Expect header as it indicates that the server doesn't support expectations (this is the case, for example, of HTTP/1.0 servers)
          li #[b 101 Switching Protocols] The requester has asked the server to switch protocols and the server has agreed to do so.
          li #[b 102 Processing] A WebDAV request may contain many sub-requests involving file operations, requiring a long time to complete the request. This code indicates that the server has received and is processing the request, but no response is available yet.[7] This prevents the client from timing out and assuming the request was lost.
          li #[b 103 Early Hints] Used to return some response headers before file HTTP message
        button(type='button') Change content
      h5(class='form-message') Success! Your form was sent to the server.
      div(class='testing-request')
        h5 Testing configuration of server request
        fieldset
          legend Personal data
          p Enter your personal data
          div(class='cell-50')
            p(class='row')
              label(for='fname') First name #[br]
              input(type='text', id='fname', name='first_name', required)
            p(class='row')
              label(for='email') Email
              input(type='email', id='email', name='email', required)
          div(class='cell-50')
            p(class='row')
              label(for='lname') Last name #[br]
              input(type='text', id='lname', name='last_name', required)
            p(class='row')
              label(for='pass') Password
              input(type='password', id='pass', name='user_pass', required)
          button(type='button') Submit data to the server
      h5 Sending simple request to the server:
      button(type='button') Send a simple request
      h5 Sending simple request with the data:
      button(type='button') Send request with data
      h5 Sending simple request to the server with POST-method:
      button(type='button') Send request 
      h5 Sending multiple requests
      button(type='button') Send request-1
      button(type='button') Send request-2
      button(type='button') Send request-3
      div(class='out-block')
    script(src='../js/main.js')
